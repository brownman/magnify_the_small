
#green ".cfg message: remove code duplications in translate.sh"
##todos:


##
# === EDIT FILES LOCATION BELOW ===
#++RULES++:=============================
#1.devide to menus/sub-menus
#2.before menus -> motivations
#3.urgent level -> apear on each screen 
#========================================
export VERBOSE=false
date1="$(date +%H:%M)"

export LANG_ESSAY=ru
export SERIES1="rules, mindmap, edit,input_task,one_task,sleep,time,sleep,glossary,suspend,rules"
export TIMER_DIR=~/tmp/timer2
export TIMER2_DIR=~/.bash_it/ofer1
export timer_sh=~/.bash_it/ofer1/timer.sh
export translate_sh="$TIMER2_DIR/translate.sh"

dir_essay=~/tmp/timer2/essays
file_task=~/tmp/timer2/daily/task.txt
file_thanks=~/tmp/timer2/daily/thanks.txt
#file_twitter=~/tmp/timer2/twitter.txt

last_task="do for other first"
msg_m0='I am writing short essay in many languages'
msg_m1='sign one circle on the wall' 
msg_m3='please update list' 
msg_m2='excellent' 
msg_m4='good'
msg_m6='write the impossible - the hardest thing for you' 
msg_m7='update your notebook please positively' 
msg_m8='you know what is right and what to do now' 
#how easier can it realy be ?"
last_thanks="you can do it - it is so easy"
last_essay="essay step"
#timer2 - one step for man - one step for"
last_suspend="well - I am tired - i am going to sleep now - thanks for the fish" 
last_bash="linux programming start here"
#well - I am tired - i am going to leep2 now - thanks for the fish" 
last_camera_before="" #say cheese little mouse" 
last_camera_after="" #this is much better" 
#directories size
#http://connermcd.com/blog/2012/03/29/sync-your-desktop-with-dropbox/
#https://developers.google.com/google-apps/tasks/firstapp
#echo 'Links:'
#echo 'http://bash.cyberciti.biz/guide/Main_Page'
#echo  'http://www.blackhatlibrary.net/'
#echo  'http://linuxaria.com/pills/how-to-scan-linux-for-vulnerabilities-with-lynis?lang=en'
#echo 'Projects:'
#echo '/TORRENTS/CODE_UNUSED/SOURCE/alarm-clock-applet-0.3.3'
#echo  "$date"

export itR=1
export tlR=1
export enR=1
export ruR=1
export arR=2
export hiR=3

alias duh="du -h -d 0 [^.]*"

RESTORE='\033[0m'

RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'
cyan() {
    echo -e "${LCYAN}$1"
        tput sgr0
}
white() {
    echo -e "${WHITE}$1"
        tput sgr0
}
green() {
    echo -e "${LGREEN}$1"
        tput sgr0
}

red() {
    echo -e "${LRED}$1"
        tput sgr0
}
yellow() {
    echo -e "${LYELLOW}$1"
        tput sgr0
}
blue() {
    echo -e "${LBLUE}$1"
        tput sgr0
}
echo2(){
if [ $VERBOSE ];then

    echo "$1"
fi

}
echo3(){
#caller 0
#red "$1"

    echo -n "_"
}

echo1(){


    echo -n "."
#red "$2"

#green ""
#$1"

#caller 0


}

messageANS() {

    local title="$1"
        local file="$2"
#local result=
        result=$( gxmessage -center         -title "$title" -file $file -timeout 15 -entry )

        if [ "$result" != '' ];then
            cat $rules_txt > /tmp/rules
            echo "$result" > $rules_txt
            cat /tmp/rules >> $rules_txt
        fi


}
messageYN() {

    local title="$1"
        local str="$2"
#local result=
        result=$( gxmessage -center -buttons "No":1,"Yes":2           -geometry 290x80           -title "$title" "$str" -timeout 10 )
        echo "$?"
        return "$?"
}
Backtrace () {
    echo "Backtrace is:"
        i=0
        while caller $i
            do
                i=$((i+1))
                    done
}



exiting()
{
    echo 'exiting'
        exit 1
}
sleep1()
{
    local sec="$1"
        echo -n  '..'
#sleep $sec"
        sleep ${sec}s
}

log1()
{
    str3=`cat  "$todo_txt" | head -2`
        str6=$( date | awk -F ' ' '{print $4}' )

        str5=`cat  "$timing_txt"  `
        str7=`cat  "$motivations_txt"  `

        str8=`cat  "$project_txt"  `
        str4=`cat  "$done_txt" | head -2`
        str1=""
        str2=$(green "words u should already know(translated today):"; blue "progress in field X: family,friend,health,study.targets" ; white "$str6";  yellow "$str4"; green "$str3"; red "$str5"; cyan "$str7" )

        echo "$str2"
}





export -f echo1 
export -f echo3 
export -f echo2 

export -f exiting
export -f log1 
export -f sleep1
export -f messageYN 


export -f green
export -f red 
export -f blue
export -f yellow
export -f Backtrace



#delete daily every day..
export mm_link='http://drichard.org/mindmaps/'
export mind_map_png=~/tmp/timer2/mind_map_ofer.png
#0 - before menus - motivation , language learning 
export memory_txt="$TIMER_DIR/daily/memory.txt"
export now_txt="$TIMER_DIR/daily/now1.txt"
export life_txt="$TIMER_DIR/weekly/life.txt"
export thanks_txt="$TIMER_DIR/weekly/thanks.txt"
export motivations_txt="$TIMER_DIR/weekly/motivations.txt"

export motivation_txt="$TIMER_DIR/weekly/motivation.txt"

export project_txt="$TIMER_DIR/weekly/project.txt"
touch $project_txt

#1 - imagine / questions
export questions_txt="$TIMER_DIR/weekly/quesitions.txt"
export ideas_txt="$TIMER_DIR/weekly/ideas.txt"
export glossary_txt="$TIMER_DIR/weekly/glossary.txt"

#1 - manage priorities 
export timing_txt="$TIMER_DIR/weekly/timing.txt"
export todo_txt="$TIMER_DIR/weekly/todo.txt"
export done_txt="$TIMER_DIR/daily/done.txt"
export rules_txt="$TIMER_DIR/weekly/rules.txt"




#timer
export task_txt="$TIMER_DIR/daily/task.txt"


export excuses_txt="$TIMER_DIR/daily/excuses.txt"
export missions_txt=/tmp/missions.txt
export schedule_txt=/tmp/gcalcli_agenda_full.txt



#problem: file must be found on first run
#export TIMERTXT_CFG_FILE="$PWD/cfg/timer.cfg"
#problem: relative
#export TIMERTXT_CFG_FILE="./cfg/timer.cfg"
#prefere absolute pmy status is:ath
#solution: define it globaly: on .bashrc


export TIMEOUT1=20
export LESSON=14
export TRANSLATE=false
export SLEEP=30
#export GXMESSAGE1=echo  -ontop -sticky -timeout 10 -buttons \'last task is: "$last_task"\' "message1"

GXMESSAGE1="-ontop -sticky -timeout 10"
GXMESSAGE0="-ontop -sticky"

#export ICONIC='' 
export ICONIC='-iconic'

export SLEEPS=15
export SUSPEND=true
export SILENCE=false
export INPUT_THANKS=true
# You can customize your actions directory location
#export TIMER_ACTIONS_DIR="$HOME/.timer.actions.d"

# == EDIT FILE LOCATIONS ABOVE ===

# === COLOR MAP ===

## Text coloring and formatting is done by inserting ANSI escape codes.
## If you have re-mapped your color codes, or use the timer.txt
## output in another output system (like Conky), you may need to
## over-ride by uncommenting and editing these defaults.
## If you change any of these here, you also need to uncomment
## the defaults in the COLORS section below. Otherwise, timer.txt
## will still use the defaults!

# export BLACK='\\033[0;30m'
# export RED='\\033[0;31m'
# export GREEN='\\033[0;32m'
# export BROWN='\\033[0;33m'
# export BLUE='\\033[0;34m'
# export PURPLE='\\033[0;35m'
# export CYAN='\\033[0;36m'
# export LIGHT_GREY='\\033[0;37m'
# export DARK_GREY='\\033[1;30m'
# export LIGHT_RED='\\033[1;31m'
# export LIGHT_GREEN='\\033[1;32m'
# export YELLOW='\\033[1;33m'
# export LIGHT_BLUE='\\033[1;34m'
# export LIGHT_PURPLE='\\033[1;35m'
# export LIGHT_CYAN='\\033[1;36m'
# export WHITE='\\033[1;37m'
# export DEFAULT='\\033[0m'

# === COLORS ===

## Uncomment and edit to override these defaults.
## Reference the constants from the color map above,
## or use $NONE to disable highlighting.
#
# Priorities can be any upper-case letter.
# A,B,C are highlighted; you can add coloring for more.
#
# export PRI_A=$YELLOW        # color for A priority
# export PRI_B=$GREEN         # color for B priority
# export PRI_C=$LIGHT_BLUE    # color for C priority
# export PRI_D=...            # define your own
# export PRI_X=$WHITE         # color unless explicitly defined

# There is highlighting for tasks that have been done,
# but haven't been archived yet.
#
# export COLOR_DONE=$LIGHT_GREY

# === BEHAVIOR ===

## customize list output
#
# TIMERTXT_SORT_COMMAND will filter after line numbers are
# inserted, but before colorization, and before hiding of
# priority, context, and project.
#
# export TIMERTXT_SORT_COMMAND='env LC_COLLATE=C sort -f -k2'

# TIMERTXT_FINAL_FILTER will filter list output after colorization,
# priority hiding, context hiding, and project hiding. That is,
# just before the list output is displayed.
#
# export TIMERTXT_FINAL_FILTER='cat'



