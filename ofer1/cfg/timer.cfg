# === EDIT FILES LOCATION BELOW ===
RESTORE='\033[0m'

RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'
cyan() {
    echo -e "${LCYAN}$1"
        tput sgr0
}
white() {
    echo -e "${WHITE}$1"
        tput sgr0
}
green() {
    echo -e "${LGREEN}$1"
        tput sgr0
}

red() {
    echo -e "${LRED}$1"
        tput sgr0
}
yellow() {
    echo -e "${LYELLOW}$1"
        tput sgr0
}
blue() {
    echo -e "${LBLUE}$1"
        tput sgr0
}

messageYN() {

local title="$1"
local str="$2"
#local result=
result=$( gxmessage -center -buttons "No":1,"Yes":0           -geometry 290x80           -title "$title" "$str" )
echo "$?"
return "$?"
}




exiting()
{
    echo 'exiting'
    exit 1
}
sleep1()
{
    local sec=$1
    echo "sleep $sec"
    sleep ${sec}s
}




export -f exiting
export -f sleep1
export -f messageYN 


export -f green
export -f red 
export -f blue
export -f yellow

export SERIES="input_task,one_task,edit,sleep,time,sleep,suspend"
export TIMER_DIR=~/tmp/timer2
export TIMER2_DIR=~/.bash_it/ofer1
export timer_sh=~/.bash_it/ofer1/timer.sh

export todo_txt="$TIMER_DIR/daily/todo.txt"
export done_txt="$TIMER_DIR/daily/done.txt"
export memory_txt="$TIMER_DIR/daily/memory.txt"
export now_txt="$TIMER_DIR/daily/now1.txt"
export rules_txt="$TIMER_DIR/weekly/rules.txt"

export ideas_txt="$TIMER_DIR/weekly/ideas.txt"


export task_txt="$TIMER_DIR/daily/task.txt"
export thanks_txt="$TIMER_DIR/daily/thanks.txt"

export excuses_txt="$TIMER_DIR/daily/excuses.txt"
export missions_txt=/tmp/missions.txt
export schedule_txt=/tmp/gcalcli_agenda_full.txt



#problem: file must be found on first run
#export TIMERTXT_CFG_FILE="$PWD/cfg/timer.cfg"
#problem: relative
#export TIMERTXT_CFG_FILE="./cfg/timer.cfg"
#prefere absolute path
#solution: define it globaly: on .bashrc


export TIMEOUT1=20
export LESSON=14
export TRANSLATE=false
export SLEEP=30
#export GXMESSAGE1=echo  -ontop -sticky -timeout 10 -buttons \'last task is: "$last_task"\' "message1"

GXMESSAGE1="-ontop -sticky -timeout $TIMEOUT1"
GXMESSAGE0="-ontop -sticky"

#export ICONIC='' 
export ICONIC='-iconic'

export SLEEPS=15
export SUSPEND=true
export SILENCE=false
export INPUT_THANKS=true
# You can customize your actions directory location
#export TIMER_ACTIONS_DIR="$HOME/.timer.actions.d"

# == EDIT FILE LOCATIONS ABOVE ===

# === COLOR MAP ===

## Text coloring and formatting is done by inserting ANSI escape codes.
## If you have re-mapped your color codes, or use the timer.txt
## output in another output system (like Conky), you may need to
## over-ride by uncommenting and editing these defaults.
## If you change any of these here, you also need to uncomment
## the defaults in the COLORS section below. Otherwise, timer.txt
## will still use the defaults!

# export BLACK='\\033[0;30m'
# export RED='\\033[0;31m'
# export GREEN='\\033[0;32m'
# export BROWN='\\033[0;33m'
# export BLUE='\\033[0;34m'
# export PURPLE='\\033[0;35m'
# export CYAN='\\033[0;36m'
# export LIGHT_GREY='\\033[0;37m'
# export DARK_GREY='\\033[1;30m'
# export LIGHT_RED='\\033[1;31m'
# export LIGHT_GREEN='\\033[1;32m'
# export YELLOW='\\033[1;33m'
# export LIGHT_BLUE='\\033[1;34m'
# export LIGHT_PURPLE='\\033[1;35m'
# export LIGHT_CYAN='\\033[1;36m'
# export WHITE='\\033[1;37m'
# export DEFAULT='\\033[0m'

# === COLORS ===

## Uncomment and edit to override these defaults.
## Reference the constants from the color map above,
## or use $NONE to disable highlighting.
#
# Priorities can be any upper-case letter.
# A,B,C are highlighted; you can add coloring for more.
#
# export PRI_A=$YELLOW        # color for A priority
# export PRI_B=$GREEN         # color for B priority
# export PRI_C=$LIGHT_BLUE    # color for C priority
# export PRI_D=...            # define your own
# export PRI_X=$WHITE         # color unless explicitly defined

# There is highlighting for tasks that have been done,
# but haven't been archived yet.
#
# export COLOR_DONE=$LIGHT_GREY

# === BEHAVIOR ===

## customize list output
#
# TIMERTXT_SORT_COMMAND will filter after line numbers are
# inserted, but before colorization, and before hiding of
# priority, context, and project.
#
# export TIMERTXT_SORT_COMMAND='env LC_COLLATE=C sort -f -k2'

# TIMERTXT_FINAL_FILTER will filter list output after colorization,
# priority hiding, context hiding, and project hiding. That is,
# just before the list output is displayed.
#
# export TIMERTXT_FINAL_FILTER='cat'
