#!/bin/bash
################################### links
#http://www.tldp.org/LDP/abs/html/comparison-ops.html
#remote requests
#google related
#file_twitter=~/tmp/timer2/twitter.txt
#directories size
#http://connermcd.com/blog/2012/03/29/sync-your-desktop-with-dropbox/
#https://developers.google.com/google-apps/tasks/firstapp
#echo 'Links:'
#echo 'http://bash.cyberciti.biz/guide/Main_Page'
#echo  'http://www.blackhatlibrary.net/'
#echo  'http://linuxaria.com/pills/how-to-scan-linux-for-vulnerabilities-with-lynis?lang=en'
#echo 'Projects:'
#echo '/TORRENTS/CODE_UNUSED/SOURCE/alarm-clock-applet-0.3.3'
#echo  "$date"
##################################  location fs


#############   workflows:
export workflow="edit,sleep,sleep,sleep,suspend" #speak,input_task
#export workflow="edit,speak,input_task,sleep"
#workflow="edit,speak,input_task,sleep,suspend" #,motivation_start,input_task"
workflow_morning="delete,input_task"
##########################
export mood='morning'
export efficiency="low"

#########url links
export url_blog="http://thoughts-about-something.blogspot.co.il"
export url_calendar="https://www.google.com/calendar/render?tab=mc"
export url_tasks="https://mail.google.com/tasks/ig?pli=1"



#path

export PUBLIC_DIR=~/.magnify_the_small/public

export PRIVATE_DIR=~/.magnify_the_small/private

export TMP_DIR=$PRIVATE_DIR/tmp
export STORY_DIR=$PUBLIC_DIR/story
export TASKS_DIR=$PUBLIC_DIR/tasks 
export MENUS_DIR=$PUBLIC_DIR/menus
export KOANS_DIR=$PUBLIC_DIR/koans
export SCREENS_DIR=$PUBLIC_DIR/screens

####### .sh
export timer_sh="$PUBLIC_DIR/timer.sh"
#export tpng="$TASKS_DIR/txt_to_png.sh"
################################  language stuff####################
arr1=( IT AR HI RU )
#arr2=( )
export itR=1
export tlR=1
export enR=1
export ruR=1
export arR=2
export hiR=3
dir_essay=~/tmp/timer2/essays
##################################  global vars##################


export series1="glossary,input_task,motivation_start,mindmap, edit,input_task,sleep,time,sleep,suspend,rules"
export NAME1='Ofer'
export VERBOSE='false'
date1="$(date +%H:%M)"
export PLAYING_ON=false
export LANG_ESSAY=ru

color_arr1=( blue green red black )
export GUI='true'
export SILENT_FETCH=false
export SILENT=false
export TIMEOUT1=20
export LESSON=14
export TRANSLATE=false
export SLEEP=30
#export GXMESSAGE1=echo  -ontop -sticky -timeout 10 -buttons \'last task is: "$last_task"\' "message1"

GXMESSAGET="-wrap -ontop -sticky -timeout 20"
GXMESSAGE1="-wrap -ontop -sticky -timeout 20"
GXMESSAGE0="-wrap -ontop -sticky"
#export ICONIC='' 
export ICONIC='-iconic'
export SLEEPS=15
export SUSPEND=true
export SILENCE=false
export INPUT_THANKS=true
################################################   messages
last_task="do for other first"
msg_remind_me="write an automation for this task"
msg_others="do for other first and have a blessing on your head"
msg_suspend='do sport for 5 seconds'
msg_m0='I am writing short essay in many languages'
msg_m1='sign one circle on the wall' 
msg_m3='please update list' 
msg_m2='excellent' 
msg_m4='good'
msg_m6='write the impossible - the hardest thing for you' 
msg_m7='update your notebook please positively' 
msg_m8='you know what is right and what to do now' 
#how easier can it realy be ?"
last_thanks="you can do it - it is so easy"
last_essay="essay step"
#timer2 - one step for man - one step for"
last_suspend="well - I am tired - i am going to sleep now - thanks for the fish" 
last_bash="linux programming start here"
#well - I am tired - i am going to leep2 now - thanks for the fish" 
last_camera_before="" #say cheese little mouse" 
last_camera_after="take a picture of your notebook please" 
#this is much better" 
export itR=1
export tlR=1
export enR=1
export ruR=1
export arR=2
export hiR=3
############################ colors
RESTORE='\033[0m'

RED='\033[00;31m'
GREEN='\033[00;32m'
YELLOW='\033[00;33m'
BLUE='\033[00;34m'
PURPLE='\033[00;35m'
CYAN='\033[00;36m'
LIGHTGRAY='\033[00;37m'

LRED='\033[01;31m'
LGREEN='\033[01;32m'
LYELLOW='\033[01;33m'
LBLUE='\033[01;34m'
LPURPLE='\033[01;35m'
LCYAN='\033[01;36m'
WHITE='\033[01;37m'

#private reports | blogging

export blank_txt=~/tmp/blank.txt

#~/tmp/timer2
export readme_md=~/.magnify_the_small/README.md
export missions_txt=/tmp/missions.txt
export schedule_txt=/tmp/gcalcli_agenda_full.txt
export mm_link='http://drichard.org/mindmaps/'
export mind_map_png=/tmp/mm.png
#dir
export dir_txt=~/tmp/bash_koans/txt
export dir_mp3=/tmp


#story
export philo_txt=$STORY_DIR/philo.txt
export police_txt=$STORY_DIR/police.txt
export quotes_txt=$STORY_DIR/quotes.txt
export earth_txt=$STORY_DIR/earth.txt
export magician=$STORY_DIR/magician.txt

#weekly 

export product_txt="$TMP_DIR/weekly/product.txt"
export prespective_txt="$TMP_DIR/weekly/prespective.txt"
touch $prespective_txt
export timing_txt="$TMP_DIR/weekly/timing.txt"
export todo_txt="$TMP_DIR/weekly/todo.txt"
export done_txt="$TMP_DIR/weekly/done.txt"

export rules_txt="$TMP_DIR/weekly/rules.txt"
export life_txt="$TMP_DIR/weekly/life.txt"
export scrap_txt="$TMP_DIR/weekly/scrap.txt"
export thanks_txt="$TMP_DIR/weekly/thanks.txt"
export mini_tasks_txt=$TMP_DIR/weekly/mini_tasks.txt

export questions_txt="$TMP_DIR/weekly/quesitions.txt"
export ideas_txt="$TMP_DIR/weekly/ideas.txt"
export glossary_txt="$TMP_DIR/weekly/glossary.txt"
export commitment_txt="$TMP_DIR/weekly/commitment.txt"
export efficiency_txt="$TMP_DIR/weekly/efficiency.txt"

export motivations_txt="$TMP_DIR/weekly/motivations.txt"
export motivation_txt="$TMP_DIR/weekly/motivation.txt"
#export job_txt="$TMP_DIR/weekly/job.txt"
#daily

#export sport_txt="$TMP_DIR/daily/sport.txt"
#export task_txt="$TMP_DIR/daily/task.txt"
#export excuses_txt="$TMP_DIR/daily/excuses.txt"
#export file_task=$TMP_DIR/timer2/daily/task.txt
#export file_thanks=~/tmp/timer2/daily/thanks.txt
#export memory_txt="$TMP_DIR/daily/memory.txt"
#export now_txt="$TMP_DIR/daily/now1.txt"

#############  .bashrc related
alias duh="du -h -d 0 [^.]*"

spell1(){
aspell -a <<< "$1"
}

######################################## functions !!!!!!!!!!!!!!!
cyan() {
    echo -e "${LCYAN}$1"
    tput sgr0
    #fi
}
white() {
    echo -e "${WHITE}$1"
    tput sgr0
}
green() {
    echo -e "${LGREEN}$1"
    tput sgr0
}

red() {
    echo -e "${LRED}$1"
    tput sgr0
}
yellow() {
    echo -e "${LYELLOW}$1"
    tput sgr0
}
blue() {
    echo -e "${LBLUE}$1"
    tput sgr0
}
echo2(){
    if [ "$VERBOSE" = true ];then

        red "$1"
    fi

}
random1()
{
    local num="$1"
    let "r = $RANDOM % $num"
    #green "r = $r"
    #counter=$r
    #let "reminder = $counter % 4"
    #echo1 "the reminder is: $reminder"
    return $r
}
rainbow(){

        random1 4
        local num=$?
        #red "num: $num"
        color0="${color_arr1[$num]}"
        
        
}
echo4(){
    local lang1=$LANG
    echo2 "lang1: $lang1"
    if [ "$lang1" = '' ];then
        random1 4
        local num=$?
        #red "num: $num"
        lang0="${arr1[$num]}"
        lang1=$(lower $lang0)
    fi



    #red "lang: $lang1"
    #echo "playing is on? $PLAYING_ON"
    local str="$1"
    yellow "$str"
    $timer_sh  translate  "$str" "$lang1"

}
echo5(){
    #count words in sentence - if lower then 4 - translate also to: ar, hi
    num=`echo "$1" | wc -w`
    str="$1"
    #$timer_sh  translate  "$str" en 
    echo "$str" | flite
    sleep1 2
    $timer_sh  translate  "$str" it 
    sleep1 2
    $timer_sh  translate  "$str" ru 
    if [ $num -lt 4 ];then
        sleep1 2
        $timer_sh  translate  "$str" hi 
        sleep1 2
        $timer_sh  translate  "$str" ar 
        sleep1 2
        $timer_sh  translate  "$str" tl 
    fi

}


echo3(){
    #caller 0
    #red "$1"

    echo -n "_"
}

echo1(){


    echo -n "."
    #red "$2"

    #green ""
    #$1"

    #caller 0


}

messageANS() {

    local title="$1"
    local file="$2"
    #local result=
    result=$( gxmessage -center  -nofocus       -title "$title" -file $file -timeout 15 -entry )

    if [ "$result" != '' ];then
        cat $rules_txt > /tmp/rules
        echo "$result" > $rules_txt
        cat /tmp/rules >> $rules_txt
    fi


}
messageFYN() {

    local title="$1"
    local file="$2"
    #local result=
    
    result=$( gxmessage  -buttons "No":1,"Yes":2       -title "$title" -file $file $GXMESSAGET )
    echo "$?"
    return "$?"
}
messageYN() {

    local title="$1"
    local str="$2"
    local result=''


    if [ "$GUI" = 'true' ];then



        result=$( gxmessage -buttons "No":1,"Yes":2          -title "$title" "$str"  $GXMESSAGET )
        #else


else

                      echo "$str"
                        read result
                        if [ $result = 'y' ];then
                            result=2
                        else
                            result=1
                        fi

    echo $result
        
fi


    echo "$?"
    return "$?"



}
Backtrace () {

    if [ "$VERBOSE" = true ];then
        echo "Backtrace is:"
        i=0
        while caller $i
        do
            i=$((i+1))
        done

    fi
}
exiting()
{
    echo 'exiting'
    exit 1
}
sleep1()
{
    local sec="$1"
    blue   '..'
    #sleep $sec"
    sleep ${sec}s
}

log1()
{
    str8=`echo "\t\t\t\tWORKFLOW";echo $workflow`
    str7=`echo "\t\t\t\tSPORT";cat  "$sport_txt" | head -2`
    str3=`cat  "$todo_txt" | head -2`
    str6=$( date | awk -F ' ' '{print $4}' )
    str5=`cat  "$timing_txt"  | head -3`
    str4=`cat  "$done_txt" | head -2` #points
    str1=""
    str2=$( white "\t\t\t\t\t\t\t$str6";  yellow "$str4"; green "$str3"; red "$str5";red "$str7";cyan "$str8" )
    echo "$str2"
}
log2(){

    str9=`cat  "$glossary_txt"  | head -3`
    str8=`cat  "$product_txt"  | head -3`
    str7=`cat  "$motivations_txt" | head -3 `

    str2=$( cyan "$str7"; white "$str8" ;green "$str9" )

    echo "$str2"
}



log3(){
    str=`cat  "$commitment_txt"`
    str2=$( white "$str"; )
    echo "$str2"

}




##########################################tts engine
#http://www.thegeekstuff.com/2010/03/espeak-speech-synthesizer-for-ubuntu/
#green ".cfg message: remove code duplications in translate.sh"
##todos:

##########################################vim:

#:set filetype=sh #for identation, patern matching
#:set syntax=sh
#,ic - comment multiple lines



####################################local tts engines:
#echo 'Вы можете играть с ним ?' | espeak -v ru -s 14
#echo "russian words" | festival --tts --language russian


#1.mpack,2.sendmail /etc/ssmtp/ssmtp.conf -> update password
#export commands_txt=commands.sh
if [ "$VERBOSE" = true ];then
    red "TODOS:"
    red "reload $PWD"
    #red "proxy all calls to gxmessage"
    Backtrace
fi

update_lang(){
    export LANG=$1
    red "update translated language to: $LANG"
}
export LANG=''
god(){
    white "$1"
}
robot(){
    cyan "robot:"
    white "$1"
}
me(){
    green "$1"
}
update_file(){
    echo "update_file got: file: $1 | msg: $2 | $3"
    local file="$1"
    local msg=`echo $2`
    if [ "$msg" != '' ];then

        cat $file > /tmp/1.txt 
        echo "$msg" > $file
        cat /tmp/1.txt >> $file
    fi
}

pids(){
    PIDS=$(pidof sh $0)  # Process IDs of the various instances of this script.
    P_array=( $PIDS )    # Put them in an array (why?).
    #echo "$PIDS"           # Show process IDs of parent and child processes.
    let "instances = ${#P_array[*]} - 1"  # Count elements, less 1.
    # Why subtract 1?
    #echo "$instances instance(s) of this script running."
}

random_quote1(){
file="$1"
  max=`cat -b $file | wc -l`
    random1 $max
    num=$?
    str=`cat $file | head -$num | tail -1`
    echo5 "$str" 

}
lower() { echo ${@,,}; }

#register signals
trap "eval exiting" SIGINT SIGTERM
      

export -f random_quote1
export -f update_lang 
export -f update_file
export -f god 
export -f robot 
export -f me 

export -f echo1 
export -f echo3 
export -f echo2 

export -f exiting
export -f log1 
export -f sleep1
export -f messageYN 


export -f green
export -f red 
export -f blue
export -f yellow
export -f Backtrace
