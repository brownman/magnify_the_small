xdg-open(){
notify-send1 xdg
local dir_download="$DATA_DIR/www"
mkdir $dir_download
local link="$1"
update_commander
#cache link
/usr/bin/xdg-open $link
}

export -f xdg-open 

gedit(){
    notify-send1 'gedit' 'exec'
local cmd=/usr/bin/gedit 
local file=$1
is_valid $file
local res=$?
breakpoint "$1"
if [ $res -eq 1 ];then
    $cmd $file
else
    flite 'file not exit'
    flite 'create new file ?'
    messageYN1 'create' 'new file' 
    res=$?
    if [ $res -eq 1  ];then
        touch $file
        $cmd $file
    fi
fi
}

xterm1(){
    trace "DEBUG : $DEBUG"
    trace "xterm1() got: 1:$1 2:$2 3:$3 4:$4"
    local prog="/usr/bin/xterm"

    local cmd="$1"
    local msg="$2"

    local arg3="$3"
    local arg4="$4"
    local func='gxmessage'
    local run1="$func hi"
    trace "cmd,msg: $cmd $msg"

    $( $prog -e $cmd "$msg" "$arg3" "$arg4"  ) &
    trace 'xterm exiting ?'
}
show_args(){
    if [ "$DEBUG" = true ];then

        local secret=$(secret 2)
    notify-send1 'cfg' 'show_args2'
    local args=("$@")

      local cmd=""
        cmd="yad --timeout 20 --title 'show_args' --form    --text \"caller: $secret\"   \
    --button='gtk-close:1'  --button='gtk-ok:0' --entry-text "
        #--button='gtk-close:0' --button='gtk-ok:1' "

local max=${#args[@]}
notify-send1 'max:' "$max"
        for (( c=0; c<=$max; c++ ))
        do
            cmd="$cmd --field=\"$c\"   \"${args[c]}\" "
        done
      local res=$( commander "$cmd" )

        #res=$(remove_last_char "$res")
        #COMMANDER=true
        #str=$(commander "$cmd")
        #res=$?
        #assert_equal_str "$res"
        #return $res
        echo  "$res"
    else 
        trace 'debug = false'
    fi
}

tasker(){
    notify-send1 'tasker' '!!!'
args=( "$@" )
$(show_args "${args[@]}")
res1=$( $tasks_sh1 "${args[@]}")
echo "$res1" #must echo for testing to work
#assert_equal_str "$res1"
}

commander(){
    local input="$1"

    local caller="${FUNCNAME[1]}"
    local lineno="${BASH_LINENO[0]}"
local filename="${BASH_SOURCE[1]}"
local callers="$0:$filename:$caller():$lineno"

    if [ "$COMMANDER1" = 'true' ];then
        input=$(gxmessage $GXMESSAGE0 -entrytext "$input" -title 'commander:' "$callers" )
    fi

local res_str=$(  eval  "$input" )

#local res_num=$?


#assert_equal_str "$res_num" 2
echo "$res_str"

#return "$res_num"
      #$input
}

export -f commander 

export -f tasker 
export -f show_args
export -f xterm1
export -f gedit
