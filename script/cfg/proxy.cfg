xdg-open(){
notify-send xdg open

local link="$1"
#local dir_download="$DATA_DIR/www"
#mkdir $dir_download

#update_commander
#cache link
/usr/bin/xdg-open $link
}

export -f xdg-open 

gedit(){
    #return

#update_commander
    notify-send 'gedit' 'exec'
local util=/usr/bin/gedit 
local file=$1
is_valid $file
local res=$?
if [ $res -eq 1 ];then
    #flite 'edit file'
cmd="exec $util $file"
commander "$cmd"
else
    messageYN1 "new file: $file" 'create' 
    res=$?
    if [ $res -eq 1  ];then
        touch $file
        cmd="exec $util $file"
        commander "$cmd"
    fi
fi
}

xterm1(){
    trace "DEBUG : $DEBUG"
    trace "xterm1() got: 1:$1 2:$2 3:$3 4:$4"
    local prog="/usr/bin/xterm"

    local cmd="$1"
    local msg="$2"

    local arg3="$3"
    local arg4="$4"
    local func='gxmessage'
    local run1="$func hi"
    trace "cmd,msg: $cmd $msg"

    $( $prog -e $cmd "$msg" "$arg3" "$arg4"  ) &
    trace 'xterm exiting ?'
}


tasker(){
    notify-send 'tasker' '!!!'
args=( "$@" )
#$(show_args "${args[@]}")
show_args
res1=$( $tasks_sh1 "${args[@]}")
echo "$res1" #must echo for testing to work
#assert_equal_str "$res1"
}

commander(){
    local input="$1"

    local caller="${FUNCNAME[1]}"
    local lineno="${BASH_LINENO[0]}"
local filename="${BASH_SOURCE[1]}"
local callers="$0:$filename:$caller():$lineno"

    if [ "$COMMANDER1" = 'true' ];then
        input=$(gxmessage $GXMESSAGE0 -entrytext "$input" -title 'commander:' "$callers" )
    fi

local res_str=$(  eval  "$input" )

#local res_num=$?


#assert_equal_str "$res_num" 2
echo "$res_str"

#return "$res_num"
      #$input
}

export -f commander 

export -f tasker 

export -f xterm1
export -f gedit
