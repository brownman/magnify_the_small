#http://www.thegeekstuff.com/2009/04/vi-vim-editor-search-and-replace-examples/
#https://wiki.ubuntu.com/DebootstrapChroot
screenshot(){
trace ''
}


casperjs(){
trace ''
}
scrapy(){
trace ''
}
is_valid(){
#http://www.tldp.org/LDP/abs/html/comparison-ops.html
    debug   "is_valid() got:"
    debug   "1:$1 2:$2"

    if [ "$1" = '' ];then
        notify-send 'no arg given'
        #error_handler
        #return
        die
    fi

    local file=$1
    local result=0
    debug  'check existance'

    local res=$(ls $file 1>/dev/null 2>&1 && echo 'y' || echo 'n')
    if [ "$res" = 'y' ];then
        if  [ -s $file ];then
            debug  'file has content'
            actualsize=$(du -b "$file" | cut -f 1)
            #assert_equal_str $actualsize
            #notify-send1 "actual size:" "$actualsize"

            if [ $actualsize -lt 2 ];then
                debug   'file is corrupted'
                let "result = 2"
            else
                debug  'file seems ok'
                let "result = 1"
            fi
        else
            debug  'file is empty'

                let "result = 3"
        fi
    else
        debug  'file not exist'

                let "result = 4"
    fi
    #assert_equal_str "is_valid: $result"
    return $result
}


commander(){
    local str1="${FUNCNAME[1]}"
    #notify-send "commander:" "$str1"
    trace 'commander'
    local str="$1"

    #local cmd=$(echo "$str")
    local cmd="$str"

    if [ "$COMMANDER" = 'true' ];then
        local  cmd=$(gxmessage -entrytext "$cmd"  -title "BEFORE:"  "$str1" $GXMESSAGET)
    fi

    local output1=$(eval "$cmd")
    #local output2=$?

    if [ "$COMMANDER" = 'true' ];then
        if [ "$output1" ];then
        local output2=$(gxmessage "$output1" -title "AFTER:" $GXMESSAGET )
        fi

    fi

    echo "$output1"
    #export COMMANDER=false
}

caller1(){
local num=2 #"$1"
local str="${FUNCNAME[$num]}"
notify-send1 "caller1()" "$str"

}

export -f caller1 
export -f is_valid 
export -f commander 
