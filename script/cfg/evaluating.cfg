#http://mywiki.wooledge.org/BashFAQ/048
#http://wiki.bash-hackers.org/commands/builtin/eval
#alias log_it=update_logger

every(){

    #assert_equal_str "aa"

    local cmd="$1"
    local num=${2:-5}
    random1 $num
    local res=$?
    local output=''
    if [ $res -eq 0 ];then

    notify-send1 "every" "$num"
        output=$(eval "$cmd")
    fi
    #echo "$output"
}

export -f every 
optional(){


notify-send1 "optional" "$@"
    local cmd="$1"
    #local text=${1:-"$cmd"}
    #local type=${1:-'info'}
cmd="yad --notification --text=\"$cmd\" --command=\"$cmd\" --image=info --timeout=10 "
#update_commander
commander "$cmd"

    #assert_equal_str "aa"


#    local num=${2:-5}
#    random1 $num
#    local res=$?
#    local output=''
#    if [ $res -eq 0 ];then
#
#    notify-send1 "every" "$num"
#        output=$(eval "$cmd")
#    fi
#    #echo "$output"

}
limit(){
    local action="$1"
    local delay=$2
    flite "take $delay seconds"
    $tasks_sh action  &
    sleep1 $delay
}
is_command(){
    local str="$1"
    case "$str" in
        !*) return $SUCCESS;;  # Begins with a letter?
    *) return $FAILURE;;
esac
}



helper0(){
    local str="$1"
    local file=${2:-/tmp/logger}
    touch "$file"
    local str1=''

    case "$str" in
        '')
            trace 'empty line' 
            ;;
        'delete!')
            echo -n '' > $file
            ;;
        'peace!')

            $tasks_sh motivation higher_self
            ;;
        'speak!')

            xterm1 $tasks_sh free_speak
            ;;
        'dbs!')

            xterm1 $tasks_sh task_from activity
            ;;
        'break!')
            flite 'breaking'
            break
            ;;
        'exit!')
            flite 'exiting'
            exiting
            ;;
        'save!')
            update_file "$file_glossary" "$str"
            flite 'saving'
            ;;

        'practice!') 
            cmd1="$tasks_sh practice_regexp" 
            eval "$cmd1"
            ;;
        *) 
            speller "$str"
            local ans=$(first_char "$str" " ")
            if [ "$ans" = 'true' ];then
                (  echo02 "$str" true &)
            else
                (  echo02 "$str" false &)
            fi
            update_file $file "$str"
            ;;
    esac

}





export -f helper0 

export -f optional
export -f limit

export -f is_command 
#export -f try 

