show_file(){


    #local    subject="$1"
    #local file_name=$(get_file_name txt $subject)
    #echo "file name: $file_name"
    file="$1"
    if [ "$file"  ];then
        $(messageYN1 'edit file ?' 'show_file' '-iconic' )
        answer=$?

        if [[ $answer -eq 1 ]];then
            (gedit $file &)
            trace ''
        else
            trace 'skip editing'
        fi
    fi
    echo "$file"


}
update_recent_link(){

    local dir_target=$LINKS_DIR

    local dir_source=$1


    local file_name=$(input_grep $dir_source)

    if [ "$file_name" ];
    then
        local source="$dir_source/$file_name"
        local target="$dir_target/$file_name_target"

        trace "creating symlink for: $file_name"
        sleep 3


        create_sym_link "$source" "$target" 
    else

        #assert_equal_str "$file_name"

        notify-send3 "skip" 
    fi



}

create_sym_link(){

    #local str="$1"
    #local dir_target="$1"
    #local ="$1"
    local target=$2
    #1dir_target/$str
    local source=$1
    #dir_source/$str 

    ln -sf $source $target
    ls -l $target
    cat $target | head -10
}

input_grep(){
    local dir="$1"
    local   grep_for=$(gxmessage "grep for:" -entry $GXMESSAGET)
    local file_name=$(list_dir2 $dir "$grep_for") #true-use grep
    echo "$file_name"
}


list_dir2(){
    local dir="$1" #script/time
    local grep_for="$2" #script/time

    local file_tmp=/tmp/list
    local res=$(ls -1 $dir | grep "$grep_for")
    echo "$res" > $file_tmp 

    local ans2=$(zenity1 $file_tmp )
    echo "$ans2"


}

list_dir(){
    local dir="$1" #script/time
    local title="$2"
    local text="$3"
    local grep=${4:-false}

    local file_tmp=/tmp/list
    #newer=,csrecent_koan.py
    local ans1=''
    local ans2=''
    local res=''


    #local str="$1"
    if [ "$grep" = true ];then
        ans1=$(gxmessage "grep for:" -entry)
    fi


    #list dir 
    res=$(ls -1 $dir | grep "$ans1")
    echo "$res" > $file_tmp 


    #echo "$res"
    #ans=$(gxmessage "$res" -entrytext "$ans1" )
    ans2=$(zenity1 $file_tmp "$title" "$text")
    echo "$ans2"


}

file_to_lines(){
    trace "read_lines() got:  1:$1 2:$2"
    local file="$1"

    while read -r line
    do
        [[ $line = \#* ]] && continue
        #echo "$line"
        #lines=("${lines[@]}" "$line")
        if [ "$line" != ''  ];then
            #trace "line: $line"
            lines+=("$line")
        fi
    done < "$file"

    #local msg=$(echo "${lines[@]}")
    #notify-send "$msg"
    #echo "$msg"
    #echo 'good'
    #echo "lines: ${lines}"
}



execute_lines(){
    #input: lines
    #echo "${lines[@]}"
    local delay=${delay:-0}
    local tmp=''
    max=${#lines[@]}
    count=1

    #notify-send " recent translation: $count"
    for line in "${lines[@]}"
    do
        sleep1 $delay
        eval "$cmd $line"
        let "count=count+1"
    done


}

#
#generate_line(){
#
#    local type=${2:-'txt'}
#    local name=$1
#    local cmd="generate_file $name $type"
#
#    local  file=$(generate_file "$name" "$type")
#
#
#    local str=$(  $file )
#
#    #assert_equal_str "pick line: $str"
#    echo "$str"
#}
#
generate_file(){
    #gxmessage $GXMESSAGET  'generate file'
    #sleep1 10
    local name=$1
    local type=$2
    local file=$DATA_DIR/${type}/$name.${type}
    #assert_equal_str $file

    touch $file
    echo "$file"
}


update_file(){
    trace "update_file got: file: $1 | msg: $2 | $3"
    local file=${1:-'/tmp/2.txt'}
    optional "gedit $file" 
    local msg="$2"

    cat $file > /tmp/1.txt 
    echo "$msg" > $file
    cat /tmp/1.txt >> $file
}


choose_line1(){

    #notify-send "$*"  "$0" 
    local subject="$1"
    local title="$2"
    local text="$3"
    local file=$(get_filename 'txt' $subject )
    #notify-send $file
    local line=$(zenity1 $file "$title" "$text")
    #local line=$(pick_line $file)
    echo "$line"
}



get_filename(){
#breakpoint
    #notify-send "$*"  "$0" 
    local type="$1"

    #gxmessage  "$type" $GXMESSAGET
    local subject="$2"
    local file=''
    local file="$DATA_DIR/${type}/${subject}.${type}"

    echo "$file"
}

pick_file(){
    local dir=$1
local    file_list=/tmp/list1
    list=$(ls -1 $dir)
    echo "$list" > $file_list
local item=$( zenity1 "$file_list" )

local choose="$dir/$item"
#xdg-open $choose
echo  "$choose"
}



export -f pick_file 
export -f choose_line1
export -f get_filename
#export -f generate_line 
export -f generate_file 
export -f update_file 
#export -f list_dir

export -f list_dir2

export -f input_grep 

export -f create_sym_link 
export -f update_recent_link 

export -f file_to_lines 


export -f execute_lines
export -f show_file
