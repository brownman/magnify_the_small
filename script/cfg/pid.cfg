erase_pid(){
    is_valid $file_locker
    local res=$?


    if [ $res -eq 1 ];then

        trace "erase_pid" "$file_locker"
        local str1=$(cat $file_locker) 
        echo '' > $file_locker
        #    else
        #
        #    trace "locker not exist:" "$file_locker"
    fi


}

unlocker(){
    notify-send "unlocker" "$file_locker"
    local gentle=${1:-$GENTLE}
    local times=5
    counter=0
    local res=0
    is_valid $file_locker
    local res=$?

    if [ $res -eq 1 ];then
        if [ "$gentle" = true ];then
            while [[ $counter -lt $times ]];do
                #try again
                is_valid $file_locker
                local res=$?
                if [ $res -eq 1 ];then
                    trace "count: $counter"
                    trace 'locker already exist' "$counter"
                    sleep1 "$delay"
                else
                    erase_pid
                    break
                fi
                let counter+=1
            done
create_locker
        else
            local pids=$(cat $file_locker)
            $(messageYN1 "unlock? $file_locker "  "$pids"  )
            local res1=$?
            if [ $res1 -eq 1 ];then
                erase_pid

    create_locker
            else
                trace 'skip unlocking'
            fi
        fi
    else
        trace 'no locker found'
create_locker
    fi


}

create_locker(){

    notify-send 'create locker' "$file_locker"
    touch $file_locker
    echo $$ >> $file_locker
    trace 'running'
    run #who run the erase_pid when process itself exit
    erase_pid false
}




eacher(){
    trace "eacher() got: 1: $1     2: $2"

    local command="$1"
    local question="$2"
    local waiting="$3"

    local title="$4"
    local result=0
    $(messageYN1 "$question" "$title")
    answer=$?
    #yellow "$answer"
    if [[ $answer -eq 1 ]];then
        #echo 'exec command'
        eval "$command" 
        if [ "$waiting" != '' ];then
            sleep1 "$waiting"
        fi
        result=1
    fi
    return $result
}




export -f create_locker 
export -f unlocker 
export -f erase_pid 
export -f eacher
