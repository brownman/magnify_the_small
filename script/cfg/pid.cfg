erase_pid(){

    local killing="$1"
    
        #assert_equal_str "to_kill:-$killing-"
    is_valid "$file_locker"
    local res=$?
    
#assert_equal_str "res:: is_valid: $res"

    local cmd=''
    local str1=''

#assert_equal_str $res 1
    if [ $res -eq 1 ];then

        notify-send1 "erase_pid" "$file_locker"
        local str1="$(cat $file_locker)"



        if [ "$killing" = 'true' ];then
#assert_equal_str "killing:$killing"
            notify-send1 'to kill'
            cmd="kill -9 $str1"
            COMMANDER=true
            commander "$cmd"

            echo '' > $file_locker
        else


        trace 'gentle..'



        fi

        #    else
        #
        #    trace "locker not exist:" "$file_locker"
    else
notify-send 'no file locker '
    fi


}

unlocker(){
    notify-send "unlocker" "$file_locker"
    local gentle=${1:-$GENTLE}
    local times=5
    counter=0
    local res=0
    is_valid $file_locker
    local res=$?

    if [ $res -eq 1 ];then
        if [ "$gentle" = true ];then
            while [[ $counter -lt $times ]];do
                #try again
                is_valid $file_locker
                local res=$?
                if [ $res -eq 1 ];then
                    #trace "count: $counter"
                    notify-send1 "$counter"
                    trace 'locker already exist' "$counter"
                    sleep1 "$delay"
                else
                    erase_pid
                    break
                fi
                let counter+=1
            done
            create_locker
        else
            
            local pids=$(cat $file_locker)
            $(messageYN1 "unlock? $file_locker "  "$pids"  )
            local res1=$?
            if [ $res1 -eq 1 ];then
                erase_pid 'true'

                #create_locker
            else
                notify-send1 'skip unlocking'
            fi
        fi
    else
        gxmessage $GXMESSAGET 'no locker found'
        create_locker
    fi


}

create_locker(){

    notify-send 'create locker' "$file_locker"
    touch $file_locker
    echo -n "$$" > $file_locker
    trace 'running'
    run #who run the erase_pid when process itself exit
    erase_pid false
}






export -f create_locker 
export -f unlocker 
export -f erase_pid 

