#http://unix.stackexchange.com/questions/3886/difference-between-nohup-disown-and
#http://mywiki.wooledge.org/BashFAQ/068
#http://mywiki.wooledge.org/ProcessManagement

erase_pid(){

    local killing="$1"

    #assert_equal_str "to_kill:-$killing-"
    is_valid "$file_locker"
    local res=$?

    #assert_equal_str "res:: is_valid: $res"

    local cmd=''
    local str1=''

    #assert_equal_str $res 1
    if [ $res -eq 1 ];then

        notify-send "erase_pid" "$file_locker"
         str1="$(cat $file_locker)"



        if [ "$killing" = 'true' ];then
            #assert_equal_str "killing:$killing"
             #'to kill'
            cmd="kill -9 $str1"
            #COMMANDER=true
            commander "$cmd"
        else
            trace 'gentle..'


        fi


        echo -n '' > $file_locker
      
    else
        notify-send 'no file locker '

#assert_equal_str "$res"
        #assert_equal_file "$file_locker"
    fi


}

unlocker(){
    notify-send "unlocker" "$file_locker"
    local gentle=${1:-$GENTLE}
    local times=${loops:-8}
    counter=0
    local res=0
    is_valid $file_locker
     res=$?

    if [ $res -eq 1 ];then
        if [ "$gentle" = true ];then

            while [[ $counter -lt $times ]];do

notify-send "$counter -lt $times"
                #try again
                is_valid $file_locker
                 res=$?
                 #assert_equal_str "$res"
                if [ $res -eq 1 ];then
                    #trace "count: $counter"
                    #notify-send "$counter"
                    trace 'locker already exist' "$counter"
                    sleep1 "$delay"
                else
                    #gxmessage $GXMESSAGET "$counter" -title 'motivation break:'
                    erase_pid
                    break
                fi
                let counter+=1
            done

        if [ $counter -eq $times ];then
            notify-send 'force' 'unlock'
            erase_pid
        fi

        else

            local pids=$(cat $file_locker)
            $(messageYN1 "override current pid? $file_locker "  "$pids"  )
             res1=$?
            if [ $res1 -eq $YES ];then
                erase_pid 'true'
                create_locker
            else
                notify-send 'skip unlocking'
            fi
        fi
    else
        #gxmessage $GXMESSAGET 'no locker found'
        trace 'no locker found'
        create_locker
    fi


}
detach(){
    local cmd="$1"
    commander "$cmd" &
local pid_last=$!

notify-send1 'disown' "$pid_last"

disown $pid_last
}
create_locker(){

    notify-send 'create locker' "$file_locker"
    touch $file_locker
    echo -n $$ > $file_locker
    notify-send 'running'
    run #who run the erase_pid when process itself exit
}






export -f create_locker 
export -f unlocker 

export -f erase_pid 
export -f detach 

#
#
#
