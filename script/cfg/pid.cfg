remove_locker(){
    local killing=${1:-true}
    local str=$(cat $file_locker)
    is_valid $file_locker
    local res=$?

    trace "remove locker" "$file_locker"
    if [ $res -eq 1 ];then
        if [ "$killing" != false ];then
            local str1=$(cat $file_locker) 
            local cmd="kill -9 $str1"
            #COMMANDER=true
            #commander "$cmd"
            eval "$cmd" &
        fi

        if [ -s $file_locker ];then
            rm  $file_locker &
        fi
    else 
        notify-send 'locker is not valid' "$file_locker"
        assert_equal_str "$str"
        is_valid $file_locker
    fi

}
#unlocker1(){
#
#    local file_locker="$1"
#    if [ -e $file_locker ];then
#
#        trace 'locker exist'
#        #notify-send "locker exist" "$file_locker"
#
#        #notify-send 'locker exist'
#        echo '0'
#    else
#
#        #notify-send 'fresh run'
#        trace 'fresh run'
#        echo '1'
#    fi
#}


unlocker(){

    #local name1=$(ls -1 "$0")
    #notify-send "unlocker: $1" "process: $$"
    #local name="$1"
    #local file_locker=$file_locker
    #local delay=$delay
    local gentle=${1:-$GENTLE}
    local times=5
    counter=0
    local res=0
    if [ "$gentle" = true ];then
        while [[ $counter -lt $times ]];do
            trace "count: $counter"
            if [ -e $file_locker ];then
                trace 'locker already exist' "$counter"
                sleep1 "$delay"
            else
                break
            fi

            let counter+=1
        done
        remove_locker
        create_locker
    else
        is_valid $file_locker 
        res=$?
        if [ $res -eq 1 ];then
            local pids=$(cat $file_locker)
            $(messageYN1 "unlock? $file_locker "  "$pids"  )
            res=$?
            if [ $res -eq 1 ];then
                remove_locker
            else
                notify-send 'skip unlocking'
            fi
        else
            notify-send 'no locker found'
            create_locker
        fi
    fi
}
#replace_locker(){
#notify-send "remove locker" "$file_locker"
#local str=$(cat $file_locker )
##assert_equal_str "$str"
#remove_locker $file_locker &
#sleep1 1
#create_locker
#
#}
create_locker(){

    #notify-send 'create locker' "$file_locker"
    touch $file_locker
    echo $$ >> $file_locker
    trace 'running'
    run #who run the remove_locker when process itself exit
    remove_locker false
}




eacher(){
    trace "eacher() got: 1: $1     2: $2"

    local command="$1"
    local question="$2"
    local waiting="$3"

    local title="$4"
    local result=0
    #answer=
    $(messageYN1 "$question" "$title")
    answer=$?
    #yellow "$answer"
    if [[ $answer -eq 1 ]];then
        #echo 'exec command'
        eval "$command" 
        if [ "$waiting" != '' ];then
            sleep1 "$waiting"
        fi
        result=1
    fi
    return $result
}

#rmm(){
#if [ -s $file_locker ];then
#    rm  $file_locker
#fi
#}
#
#export -f rmm 




#export -f replace_locker 
export -f create_locker 
#export -f unlocker1 
export -f unlocker 
export -f remove_locker
export -f eacher
