#http://mywiki.wooledge.org/BashGuide/Arrays
str_to_arr(){
    IFS=. read -a ip_elements <<< "127.0.0.1"

}

is_empty_array(){
    local result=0
    if [ ${#array[@]} -eq 0 ]; then
        result=0
    else
        result=1
    fi
    return $result
}

arr_to_str(){
    #arr=(1 2)
    #assume: exist: array
    local delimeter="|"
    #"${1:-'|'}"
    #local arr="$arr"
    local  length=${#arr[@]}
    if [  $length -ne 0 ];then 
        if [ "$delimeter" != '' ];then 
            ( IFS="$delimeter"; echo "${arr[*]}" )
            trace 'x'
        else
            trace "delimeter is empty : $delimeter"
        fi
    else
        trace "array is empty: length =  $length"

    fi

}



pairs(){
    notify-send3 "pairs" "$time1"


    declare -A arr

    arr["it"]='ac'

    local str=''
    if [ ${#arr[@]} -ne 0  ];then

        for i in "${!arr[@]}"
        do
            str="$str, key  : $i"
            str="$str, value: ${arr[$i]}"
        done
    fi

    echo "$str"


}
pairs1(){
    #echo 'hi'
    declare -A fullNames
    fullNames=( ["lhunath"]="Maarten Billemont" ["greycat"]="Greg Wooledge" )

    for user in "${!fullNames[@]}";do
        str="$strm User: $user, full name: ${fullNames[$user]}."; 
    done
    echo "str: $str"
}
pairs3(){
    local lang="it"


    times1=${repeater[$lang]}
    #  notify-send3 "times: $times1 for $lang"
    echo "$times1"
}

#
show_args(){
    
    local res=''
    if [ "$COMMANDER1" = true ];then


        local secret=$(secret 2)
        notify-send 'cfg' 'show_args'

        local cmd=""
        cmd="yad --quoted-output --timeout 20 --title 'show_args' --form    --text \"caller: $secret\"   \
            --button='gtk-close:1'  --button='gtk-ok:0' --entry-text "
        #--button='gtk-close:0' --button='gtk-ok:1' "

        local max=${#args[@]}
        notify-send1 'max:' "$max"
        for (( c=0; c<=$max; c++ ))
        do
            cmd="$cmd --field=\"$c\"   \"${args[c]}\" "
        done

        res=$( commander "$cmd" )
        #local res1=$?

        if [ "$res" = '' ];then
            exiting
        fi


    trace  "$res"
    fi



}

export -f show_args
export -f arr_to_str
export -f pairs
export -f pairs1
export -f pairs3

#test1=$( pairs3 )
#trace "$test1"
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
##
