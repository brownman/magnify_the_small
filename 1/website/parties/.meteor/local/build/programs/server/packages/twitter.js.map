{"version":3,"file":"/packages/twitter.js","sources":["twitter/twitter_server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,a;;AAEA,Y;AACA,8D;AACA,uD;AACA,4D;AACA,4D;AACA,E;;;AAGA,sE;AACA,qF;;AAEA,kE;AACA,sG;;AAEA,qB;AACA,wB;AACA,qC;AACA,0C;AACA,qD;AACA,I;;AAEA,wC;AACA,2D;AACA,gC;;AAEA,U;AACA,6B;AACA,c;AACA,gB;AACA,2B;AACA,O;AACA,K;AACA,I;AACA,G;;;AAGA,wD;AACA,mD;AACA,E","sourcesContent":["Twitter = {};\n\nvar urls = {\n  requestToken: \"https://api.twitter.com/oauth/request_token\",\n  authorize: \"https://api.twitter.com/oauth/authorize\",\n  accessToken: \"https://api.twitter.com/oauth/access_token\",\n  authenticate: \"https://api.twitter.com/oauth/authenticate\"\n};\n\n\n// https://dev.twitter.com/docs/api/1.1/get/account/verify_credentials\nTwitter.whitelistedFields = ['profile_image_url', 'profile_image_url_https', 'lang'];\n\nOauth.registerService('twitter', 1, urls, function(oauthBinding) {\n  var identity = oauthBinding.get('https://api.twitter.com/1.1/account/verify_credentials.json').data;\n\n  var serviceData = {\n    id: identity.id_str,\n    screenName: identity.screen_name,\n    accessToken: oauthBinding.accessToken,\n    accessTokenSecret: oauthBinding.accessTokenSecret\n  };\n\n  // include helpful fields from twitter\n  var fields = _.pick(identity, Twitter.whitelistedFields);\n  _.extend(serviceData, fields);\n\n  return {\n    serviceData: serviceData,\n    options: {\n      profile: {\n        name: identity.name\n      }\n    }\n  };\n});\n\n\nTwitter.retrieveCredential = function(credentialToken) {\n  return Oauth.retrieveCredential(credentialToken);\n};\n"]}