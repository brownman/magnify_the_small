)]}'
{"version":3,"file":"/packages/twitter.js","sources":["twitter/twitter_configure.html","twitter/twitter_configure.js","twitter/twitter_client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2d;;;;;;;;;;;;;;;;;;;ACAA,sE;AACA,yD;AACA,sD;AACA,E;;AAEA,qE;AACA,U;AACA,qD;AACA,kD;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;ACVA,a;;AAEA,2C;AACA,oE;AACA,mF;AACA,4E;AACA,W;AACA,mF;AACA,qD;AACA,4E;AACA,gD;AACA,iB;AACA,G;;AAEA,iF;AACA,gB;AACA,2I;AACA,W;AACA,G;;AAEA,oC;AACA,gF;AACA,uF;AACA,yB;;AAEA,qD;AACA,qD;AACA,wF;;AAEA,gD;AACA,qD;AACA,uD;AACA,yC;AACA,sC;;AAEA,+E;AACA,E","sourcesContent":["Template.__define__(\"configureLoginServiceDialogForTwitter\",Package.handlebars.Handlebars.json_ast_to_func([\"<p>\\n    First, you'll need to register your app on Twitter. Follow these steps:\\n  </p>\\n  <ol>\\n    <li>\\n      Visit <a href=\\\"https://dev.twitter.com/apps/new\\\" target=\\\"_blank\\\">https://dev.twitter.com/apps/new</a>\\n    </li>\\n    <li>\\n      Set Callback URL to: <span class=\\\"url\\\">\",[\"{\",[[0,\"siteUrl\"]]],\"_oauth/twitter?close</span>\\n    </li>\\n  </ol>\"]));\n","Template.configureLoginServiceDialogForTwitter.siteUrl = function () {\n  // Twitter doesn't recognize localhost as a domain name\n  return Meteor.absoluteUrl({replaceLocalhost: true});\n};\n\nTemplate.configureLoginServiceDialogForTwitter.fields = function () {\n  return [\n    {property: 'consumerKey', label: 'Consumer key'},\n    {property: 'secret', label: 'Consumer secret'}\n  ];\n};","Twitter = {};\n\n// Request Twitter credentials for the user\n// @param options {optional}  XXX support options.requestPermissions\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nTwitter.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'twitter'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError(\"Service not configured\"));\n    return;\n  }\n\n  var credentialToken = Random.id();\n  // We need to keep credentialToken across the next two 'steps' so we're adding\n  // a credentialToken parameter to the url and the callback url that we'll be returned\n  // to by oauth provider\n\n  // url back to app, enters \"step 2\" as described in\n  // packages/accounts-oauth1-helper/oauth1_server.js\n  var callbackUrl = Meteor.absoluteUrl('_oauth/twitter?close&state=' + credentialToken);\n\n  // url to app, enters \"step 1\" as described in\n  // packages/accounts-oauth1-helper/oauth1_server.js\n  var url = '/_oauth/twitter/?requestTokenAndRedirect='\n        + encodeURIComponent(callbackUrl)\n        + '&state=' + credentialToken;\n\n  Oauth.initiateLogin(credentialToken, url, credentialRequestCompleteCallback);\n};\n"]}